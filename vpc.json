{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This creates the network infrastructure. Please see readme for usage.",
    "Parameters": {
        "SubnetAZ1": {
            "Description": "Availability Zone of the Subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "SubnetAZ2": {
            "Description": "Availability Zone of the Subnet",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "InstanceTenancy": "default",
                "Tags": [{
                    "Key": "Name",
                    "Value": "VPC"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "mgmtSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.1.0/24",
                "MapPublicIpOnLaunch": true,
                "Tags": [{
                    "Key": "Name",
                    "Value": "mgmtSubnet1"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }, {
                    "Key": "SubnetType",
                    "Value": "MGMT Subnet"
                }],
                "AvailabilityZone": {
                    "Ref": "SubnetAZ1"
                }
            }
        },
        "mgmtSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.2.0/24",
                "MapPublicIpOnLaunch": true,
                "Tags": [{
                    "Key": "Name",
                    "Value": "mgmtSubnet2"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }, {
                    "Key": "SubnetType",
                    "Value": "MGMT Subnet"
                }],
                "AvailabilityZone": {
                    "Ref": "SubnetAZ2"
                }
            }
        },
        "publicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.11.0/24",
                "Tags": [{
                    "Key": "Name",
                    "Value": "publicSubnet1"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }, {
                    "Key": "SubnetType",
                    "Value": "Public Subnet"
                }],
                "AvailabilityZone": {
                    "Ref": "SubnetAZ1"
                }
            }
        },
        "publicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.12.0/24",
                "Tags": [{
                    "Key": "Name",
                    "Value": "publicSubnet2"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }, {
                    "Key": "SubnetType",
                    "Value": "Public Subnet"
                }],
                "AvailabilityZone": {
                    "Ref": "SubnetAZ2"
                }
            }
        },
        "privateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.13.0/24",
                "Tags": [{
                    "Key": "Name",
                    "Value": "privateSubnet1"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }, {
                    "Key": "SubnetType",
                    "Value": "Private Subnet"
                }],
                "AvailabilityZone": {
                    "Ref": "SubnetAZ1"
                }
            }
        },
        "privateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.14.0/24",
                "Tags": [{
                    "Key": "Name",
                    "Value": "privateSubnet2"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }, {
                    "Key": "SubnetType",
                    "Value": "Private Subnet"
                }],
                "AvailabilityZone": {
                    "Ref": "SubnetAZ2"
                }
            }
        },
        "databaseSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.15.0/24",
                "Tags": [{
                    "Key": "Name",
                    "Value": "databaseSubnet1"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }, {
                    "Key": "SubnetType",
                    "Value": "Database Subnet"
                }],
                "AvailabilityZone": {
                    "Ref": "SubnetAZ1"
                }
            }
        },
        "databaseSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.0.16.0/24",
                "Tags": [{
                    "Key": "Name",
                    "Value": "databaseSubnet2"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }, {
                    "Key": "SubnetType",
                    "Value": "Database Subnet"
                }],
                "AvailabilityZone": {
                    "Ref": "SubnetAZ2"
                }
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [{
                    "Key": "Name",
                    "Value": "InternetGateway"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "natgw1EIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "natgw2EIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "natGW1": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": ["natgw1EIP", "AllocationId"]
                },
                "SubnetId": {
                    "Ref": "mgmtSubnet1"
                }
            }
        },
        "natGW2": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": ["natgw2EIP", "AllocationId"]
                },
                "SubnetId": {
                    "Ref": "mgmtSubnet2"
                }
            }
        },
        "publicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "publicRouteTable"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "publicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "AttachGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "publicSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "publicSubnet1"
                },
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                }
            }
        },
        "publicSubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "publicSubnet2"
                },
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                }
            }
        },
        "publicSubnetRouteTableAssociation3": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "mgmtSubnet1"
                },
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                }
            }
        },
        "publicSubnetRouteTableAssociation4": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "mgmtSubnet2"
                },
                "RouteTableId": {
                    "Ref": "publicRouteTable"
                }
            }
        },
        "privateRouteTable1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "privateRouteTable1"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "privateRoute1": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "AttachGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "privateRouteTable1"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "natGW1"
                }
            }
        },
        "privateRouteTable2": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "privateRouteTable2"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "privateRoute2": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "AttachGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "privateRouteTable2"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "natGW2"
                }
            }
        },
        "privateSubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "privateSubnet1"
                },
                "RouteTableId": {
                    "Ref": "privateRouteTable1"
                }
            }
        },
        "privateSubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "databaseSubnet1"
                },
                "RouteTableId": {
                    "Ref": "privateRouteTable1"
                }
            }
        },
        "privateSubnetRouteTableAssociation3": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "privateSubnet2"
                },
                "RouteTableId": {
                    "Ref": "privateRouteTable2"
                }
            }
        },
        "privateSubnetRouteTableAssociation4": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "databaseSubnet2"
                },
                "RouteTableId": {
                    "Ref": "privateRouteTable2"
                }
            }
        },
        "privateNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "privateNetworkAcl"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "privateNetworkAclEntryEgress1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "privateNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "-1",
                    "To": "-1"
                }
            }
        },
        "privateNetworkAclEntryIngress1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "privateNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "-1",
                    "To": "-1"
                }
            }
        },
        "publicNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "publicNetworkAcl"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "publicNetworkAclEntryEgress1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "publicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "-1",
                    "To": "-1"
                }
            }
        },
        "publicNetworkAclEntryIngress1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "publicNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "-1",
                    "To": "-1"
                }
            }
        },
        "mgmtNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "mgmtNetworkAcl"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "mgmtNetworkAclEntryEgress1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "mgmtNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "-1",
                    "To": "-1"
                }
            }
        },
        "mgmtNetworkAclEntryIngress1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "mgmtNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "-1",
                    "To": "-1"
                }
            }
        },
        "databaseNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "databaseNetworkAcl"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "databaseNetworkAclEntryEgress1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "databaseNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "-1",
                    "To": "-1"
                }
            }
        },
        "databaseNetworkAclEntryIngress1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "databaseNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "-1",
                    "To": "-1"
                }
            }
        },
        "SubnetNetworkAclAssociation1": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "publicSubnet1"
                },
                "NetworkAclId": {
                    "Ref": "publicNetworkAcl"
                }
            }
        },
        "SubnetNetworkAclAssociation2": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "publicSubnet2"
                },
                "NetworkAclId": {
                    "Ref": "publicNetworkAcl"
                }
            }
        },
        "SubnetNetworkAclAssociation3": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "privateSubnet1"
                },
                "NetworkAclId": {
                    "Ref": "privateNetworkAcl"
                }
            }
        },
        "SubnetNetworkAclAssociation4": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "privateSubnet2"
                },
                "NetworkAclId": {
                    "Ref": "privateNetworkAcl"
                }
            }
        },
        "SubnetNetworkAclAssociation5": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "mgmtSubnet1"
                },
                "NetworkAclId": {
                    "Ref": "mgmtNetworkAcl"
                }
            }
        },
        "SubnetNetworkAclAssociation6": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "mgmtSubnet2"
                },
                "NetworkAclId": {
                    "Ref": "mgmtNetworkAcl"
                }
            }
        },
        "SubnetNetworkAclAssociation7": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "databaseSubnet1"
                },
                "NetworkAclId": {
                    "Ref": "databaseNetworkAcl"
                }
            }
        },
        "SubnetNetworkAclAssociation8": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "databaseSubnet2"
                },
                "NetworkAclId": {
                    "Ref": "databaseNetworkAcl"
                }
            }
        },
        "privateSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Private security group",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "10.0.11.0/24"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "10.0.11.0/24"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "10.0.12.0/24"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "10.0.12.0/24"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "10.0.1.0/24"

                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "10.0.2.0/24"

                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "10.0.13.0/24"

                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "10.0.14.0/24"

                }, {
                    "IpProtocol": "icmp",
                    "FromPort": "-1",
                    "ToPort": "-1",
                    "CidrIp": "10.0.0.0/16"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "44321",
                    "ToPort": "44323",
                    "SourceSecurityGroupId": {
                        "Ref": "mgmtSecurityGroup"
                    }
                }],
                "SecurityGroupEgress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "icmp",
                    "FromPort": "-1",
                    "ToPort": "-1",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "9418",
                    "ToPort": "9418",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "10.0.13.0/24"

                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "10.0.14.0/24"

                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "5000",
                    "ToPort": "5000",
                    "CidrIp": "0.0.0.0/0"

                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "privateSecurityGroup"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]

            }
        },
        "publicSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Public security group",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"

                }, {
                    "IpProtocol": "icmp",
                    "FromPort": "-1",
                    "ToPort": "-1",
                    "CidrIp": "10.0.0.0/16"
                }],
                "SecurityGroupEgress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "icmp",
                    "FromPort": "-1",
                    "ToPort": "-1",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "9418",
                    "ToPort": "9418",
                    "CidrIp": "0.0.0.0/0"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "publicSecurityGroup"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "mgmtSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "MGMT security group",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "icmp",
                    "FromPort": "-1",
                    "ToPort": "-1",
                    "CidrIp": "0.0.0.0/0"
                }],
                "SecurityGroupEgress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "10.0.0.0/16"
                }, {
                    "IpProtocol": "icmp",
                    "FromPort": "-1",
                    "ToPort": "-1",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "9418",
                    "ToPort": "9418",
                    "CidrIp": "0.0.0.0/0"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "mgmtSecurityGroup"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "databaseSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Database security group",
                "VpcId": {
                    "Ref": "VPC"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "5432",
                    "ToPort": "5432",
                    "CidrIp": "10.0.11.0/24"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "5432",
                    "ToPort": "5432",
                    "CidrIp": "10.0.12.0/24"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "10.0.1.0/24"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "10.0.2.0/24"
                }, {
                    "IpProtocol": "icmp",
                    "FromPort": "-1",
                    "ToPort": "-1",
                    "CidrIp": "10.0.0.0/16"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "44321",
                    "ToPort": "44323",
                    "SourceSecurityGroupId": {
                        "Ref": "mgmtSecurityGroup"
                    }
                }],
                "SecurityGroupEgress": [{
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "icmp",
                    "FromPort": "-1",
                    "ToPort": "-1",
                    "CidrIp": "0.0.0.0/0"
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "9418",
                    "ToPort": "9418",
                    "CidrIp": "0.0.0.0/0"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": "databaseSecurityGroup"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "DNS": {
            "Type": "AWS::Route53::HostedZone",
            "Properties": {
                "HostedZoneConfig": {
                    "Comment": "Private HostedZone for wyncode-devops.internal"
                },
                "Name": "wyncode-devops.internal",
                "VPCs": [{
                    "VPCId": {
                        "Ref": "VPC"
                    },
                    "VPCRegion": {
                        "Ref": "AWS::Region"
                    }
                }],
                "HostedZoneTags": [{
                    "Key": "Name",
                    "Value": "DNS"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }, {
                    "Key": "zoneName",
                    "Value": "wyncode-devops.internal"
                }]
            }
        },
        "DhcpOptions": {
            "Type": "AWS::EC2::DHCPOptions",
            "Properties": {
                "DomainName": "wyncode-devops.internal",
                "DomainNameServers": ["AmazonProvidedDNS"],
                "Tags": [{
                    "Key": "Name",
                    "Value": "DhcpOptions"
                }, {
                    "Key": "StackID",
                    "Value": {
                        "Ref": "AWS::StackId"
                    }
                }]
            }
        },
        "VPCDHCPOptionsAssociation": {
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "DhcpOptionsId": {
                    "Ref": "DhcpOptions"
                }
            }
        }

    }
}
